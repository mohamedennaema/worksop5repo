AWSTemplateFormatVersion: "2010-09-09"
Description: workshop 4

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: workshopmohamedennaemmn

  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaRoleen
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3FullAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject #Allow reading objects
                  - s3:PutObject #Allow writing objects
                Resource: "*"
  LambdaWriteFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaWriteFunction2n
      Handler: index.lambda_handler
      Role: !GetAtt MyLambdaRole.Arn
      Runtime: python3.8
      Code:
        ZipFile: |
          import csv
          import boto3

          def lambda_handler(event, context):
              header = ['Name', 'Age', 'Profession']
              data = [('John', '25', 'Engineer'),
                      ('Anna', '28', 'Doctor'),
                      ('Peter', '30', 'Artist')]
              filename = 'peaple.csv'
              with open('/tmp/' + filename, 'w', newline='') as f:
                  writer = csv.writer(f)
                  writer.writerow(header)
                  writer.writerows(data)

              bucket = 'workshopmohamedennaemmn'
              s3 = boto3.client('s3')
              s3.upload_file('/tmp/' + filename, bucket, filename)
  LambdaReadFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaReadFunction1n
      Handler: index.lambda_handler
      Role: !GetAtt MyLambdaRole.Arn
      Runtime: python3.8
      Code:
        ZipFile: |
          import boto3

          def lambda_handler(event, context):
            s3 = boto3.client('s3')
            bucket_name = 'workshopmohamedennaemmn'
            object_key = 'peaple.csv'
            try:
              response = s3.get_object(Bucket=bucket_name, Key=object_key)
              data = response['Body'].read()
              print(data)
              return {
                'statusCode': 200,
                'body': 'Hello from Lambda.'
              }
            except Exception as e:
              print(f"Error: {e}")
              return {
                'statusCode': 500,
                'body': 'Error.'
              }

#aws cloudformation create-stack --stack-name workshopennaem --template-body file://template.yaml
